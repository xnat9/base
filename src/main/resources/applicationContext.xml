<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd ">

	<!-- 加载外部属性文件(*.properties) -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:config.properties</value>
		</property>
	</bean>
	<!-- 启用AOP支持 -->
	<aop:aspectj-autoproxy />
	<!-- 注解支持 -->
	<mvc:annotation-driven />
	<!-- 组件扫描路径 -->
	<context:component-scan base-package="org.xnat" />

	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 必须要这么写 不然拦截不了(不存在包含关系) -->
			<mvc:mapping path="/*.do" />
			<mvc:mapping path="/*/*.do" />
			<bean class="org.xnat.interceptor.Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 数据源1 -->
	<bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="password" value="${dataSource1.password}"></property>
		<property name="username" value="${dataSource1.username}"></property>
		<property name="driverClassName" value="${dataSource1.driver}"></property>
		<property name="url" value="${dataSource1.url}"></property>
		<property name="initialSize" value="2" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="2" />
		<property name="maxWait" value="1000" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="removeAbandoned" value="true" />
		<property name="testWhileIdle" value="false" />
	</bean>

	<!-- 动态数据源 -->
	<bean id="dynamicDataSource" class="org.xnat.dao.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dataSource1" key="${dataSource1.id}"></entry>
				<!-- 
				<entry value-ref="dataSource2" key="${dataSource2.id}"></entry>
				-->
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource1"></property>
	</bean>

	<!-- mybatis的sessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>
	<!-- mybatis dao层接口(mapper)扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
		<property name="basePackage" value="org.xnat.dao" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager1"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1" />
	</bean>
	<!-- 事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager1" />
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource1"/>
	</bean>
	
	<!-- 检查每次数据提交是否是有文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans>
